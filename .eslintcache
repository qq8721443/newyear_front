[{"/Users/hongjeong-gi/Documents/NewYear/front/src/index.js":"1","/Users/hongjeong-gi/Documents/NewYear/front/src/reportWebVitals.js":"2","/Users/hongjeong-gi/Documents/NewYear/front/src/App.js":"3","/Users/hongjeong-gi/Documents/NewYear/front/src/pages/oauthPage.js":"4"},{"size":593,"mtime":1609823882574,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1608986711982,"results":"7","hashOfConfig":"6"},{"size":6184,"mtime":1609945539392,"results":"8","hashOfConfig":"6"},{"size":1300,"mtime":1609839583649,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"kgv5nt",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"12"},"/Users/hongjeong-gi/Documents/NewYear/front/src/index.js",[],["20","21"],"/Users/hongjeong-gi/Documents/NewYear/front/src/reportWebVitals.js",[],"/Users/hongjeong-gi/Documents/NewYear/front/src/App.js",["22","23","24","25"],"/Users/hongjeong-gi/Documents/NewYear/front/src/pages/oauthPage.js",["26","27","28"],"import React, { useEffect } from 'react';\nimport queryString from 'query-string';\n\nconst Oauth = ({location, match}) => {\n    const query = queryString.parse(location.search)\n    const [accessToken, setAccessToken] = React.useState('')\n    const [refreshToken, setRefreshToken] = React.useState('')\n\n    useEffect(() => {\n        fetch('http://localhost:8000/main/oauth/', {\n            method:'POST',\n            body:JSON.stringify({\n                code:query.code\n            })\n        })\n        .then(res => res.json())\n        .then(json => {\n            console.log(JSON.stringify(json))\n            if(accessToken == ''){\n                setAccessToken(json['res']['access_token'])\n            }\n        })\n        .then(\n            fetch('http://localhost:8000/main/user_info/',{\n                method:'POST',\n                body:JSON.stringify({\n                    access_token:accessToken\n                })\n            })\n            .then(res => res.json())\n            .then(json => alert(JSON.stringify(json)))\n            //.catch(e => console.log(e))\n        )\n    })\n\n    \n\n    return(\n        <>\n        <div>\n            코드 : {query.code}\n        </div>\n        <div>\n            액세스 토큰 : {accessToken}\n        </div>\n        </>\n    )\n}\n\nexport default Oauth;",{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":1,"column":8,"nodeType":"35","messageId":"36","endLine":1,"endColumn":12},{"ruleId":"33","severity":1,"message":"37","line":3,"column":17,"nodeType":"35","messageId":"36","endLine":3,"endColumn":26},{"ruleId":"33","severity":1,"message":"38","line":50,"column":9,"nodeType":"35","messageId":"36","endLine":50,"endColumn":19},{"ruleId":"33","severity":1,"message":"39","line":54,"column":9,"nodeType":"35","messageId":"36","endLine":54,"endColumn":16},{"ruleId":"33","severity":1,"message":"40","line":7,"column":12,"nodeType":"35","messageId":"36","endLine":7,"endColumn":24},{"ruleId":"33","severity":1,"message":"41","line":7,"column":26,"nodeType":"35","messageId":"36","endLine":7,"endColumn":41},{"ruleId":"42","severity":1,"message":"43","line":19,"column":28,"nodeType":"44","messageId":"45","endLine":19,"endColumn":30},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'returnHope' is assigned a value but never used.","'addHope' is assigned a value but never used.","'refreshToken' is assigned a value but never used.","'setRefreshToken' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]